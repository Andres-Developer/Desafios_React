{"version":3,"sources":["context/CartContext.js","config/firebaseConfig.js","components/Item/Item.js","components/Item/ItemList.js","components/Item/ItemListContainerFirebase.js","components/Item/ItemCount.js","components/Item/ItemDetail.js","components/Item/ItemDetailContainerFirebase.js","components/Cart/CartFirebase.js","components/Form/Form.js","components/Cart/ContadorCarrito.js","components/Cart/CartWidget.js","img/shoppingLogo.svg","components/NavBar/NavBootStrap.js","App.js","index.js"],"names":["ProviderCart","children","useState","totalItems","setTotalItems","totalPrecio","setTotalPrecio","itemsCarrito","setItemsCarrito","useEffect","sumaCantidad","sumaPrecios","forEach","e","cantidad","precio","Provider","value","addItem","item","length","itemRepetido","find","idProducto","itemActualizado","Number","itemsSinItemRepetido","map","removeItem","listaSinItem","filter","addCountItem","stock","listaModCantidadItem","alert","removeCountItem","CartContext","createContext","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getFirestore","guardarDatabase","nombreColeccion","data","a","addDoc","collection","response","Error","message","consultarDatabase","getDocs","query","elementos","docs","doc","id","consultarDocumentoDatabase","getDoc","_document","document","buscarDocumentoFiltradoCategoria","idCategory","where","getFilterCollection","keyDocumento","condicion","limite","orden","orderBy","limit","Item","id_interno","title","pictureUrl","Card","style","width","Img","variant","src","Body","Title","className","Text","to","ItemList","itemsArray","items","idx","ItemListContainer","setItems","useParams","loading","setLoading","llamadaServidor","listaTemporal","categoryFilter","Spinner","animation","ItemCount","productosAgregadosCarrito","initial","count","setCount","agregadoCarrito","setAgregadoCarrito","useContext","type","onClick","ItemDetail","itemDetail","totalProductos","setTotalProductos","alt","marca","toUpperCase","descripcion","disabled","price","quantityToAdd","ItemDetailContainer","setItemDetail","productId","noEncontrado","setNoEncontrado","getItem","productoObtenido","Cart","infoCart","setInfoCart","setData","itemsInfoCompleta","setItemsInfoCompleta","idItemEliminar","setIdItemEliminar","mounted","setMounted","show","setShow","showVaciar","setShowVaciar","handleClose","getCart","itemsFiltrados","ef","modalEliminacionItem","modalVaciarCarrito","muestraNumeroComas","toString","replace","colSpan","pathname","Modal","onHide","Header","closeButton","Footer","Button","Form","ordenCompra","setOrdenCompra","nombre","setNombre","apellido","setApellido","email","setEmail","emailVerification","setEmailVerification","emailErr","setEmailErr","emailVerificationErr","setEmailVerificationErr","telefono","setTelefono","useLocation","handleSubmit","event","preventDefault","generaNumeroOrden","nro_orden","nueva_orden","buyer","date","Timestamp","fromDate","Date","ordenGuardada","getOrder","emailRegex","idOrder","ordenObtenida","datosOrdenados","primerElementoLista","nro_orden_maximo","undefined","timeStamp","fecha","toMillis","mes","getMonth","dia","getDate","ano","getFullYear","hora2","toLocaleString","hour","minute","second","hour12","convierteFechaHora","onSubmit","htmlFor","placeholder","onChange","target","required","emailInput","test","ContadorCarrito","CartWidget","NavBootStrap","Navbar","collapseOnSelect","expand","bg","Container","Brand","shoppingLogo","height","NavDropdown","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.299dc89a.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nconst ProviderCart = ({ children }) => {\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [totalPrecio, setTotalPrecio] = useState(0);\r\n    const [itemsCarrito, setItemsCarrito] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let sumaCantidad = 0;\r\n        let sumaPrecios = 0;\r\n        //---Suma cantidad TOTAL de productos en el Carrito\r\n        itemsCarrito.forEach(e => {\r\n            sumaCantidad += e.cantidad;\r\n            sumaPrecios += e.cantidad * e.precio;\r\n        });\r\n        setTotalItems(sumaCantidad);\r\n        setTotalPrecio(sumaPrecios);\r\n    }, [itemsCarrito]);\r\n\r\n    //Función que agrega items a la lista de objetos de items\r\n    const addItem = (item) => {\r\n        //----Verifica si la lista está vacía\r\n        if (itemsCarrito.length === 0) {\r\n            setItemsCarrito([...itemsCarrito, item]);\r\n        } else {\r\n            //----Busca si el item está repetido\r\n            let itemRepetido = itemsCarrito.find(e => e.idProducto === item.idProducto);\r\n            //----Condición si hay repetidos\r\n            if (itemRepetido) {\r\n                let itemActualizado = { ...itemRepetido, 'cantidad': itemRepetido.cantidad + Number(item.cantidad) };\r\n                let itemsSinItemRepetido = itemsCarrito.map(e => (e.idProducto === item.idProducto ? itemActualizado : e));\r\n                setItemsCarrito(itemsSinItemRepetido);\r\n            } else {\r\n                setItemsCarrito([...itemsCarrito, item]);\r\n            }\r\n        }\r\n    };\r\n    //Función para remover item de la lista de items:\r\n    const removeItem = (idProducto) => {\r\n        let listaSinItem = itemsCarrito.filter(e => e.idProducto !== idProducto);\r\n        setItemsCarrito(listaSinItem);\r\n    };\r\n    //Función para agregar más Cantidad a un mismo item\r\n    const addCountItem = (idProducto, cantidad, stock) => {\r\n        let listaModCantidadItem = itemsCarrito.map(e => {\r\n            if (e.idProducto === idProducto) {\r\n                if (e.cantidad < Number(stock)) {\r\n                    return { ...e, 'cantidad': e.cantidad += Number(cantidad) };\r\n                } else {\r\n                    alert(`No puedes agregar más productos que el stock de ${stock}`);\r\n                    return e;\r\n                }\r\n            } else {\r\n                return e;\r\n            }\r\n        });\r\n        setItemsCarrito(listaModCantidadItem);\r\n    };\r\n    //Funcion para remover Cantidad a un mismo item\r\n    const removeCountItem = (idProducto, cantidad) => {\r\n        let listaModCantidadItem = itemsCarrito.map(e => {\r\n            if (e.idProducto === idProducto) {\r\n                if (e.cantidad > 1) {\r\n                    return { ...e, 'cantidad': e.cantidad -= Number(cantidad) };\r\n                } else {\r\n                    alert(`No puedes eliminar menos productos que 1, si deseas puedes eliminar el item con el botón de: X`);\r\n                    return e;\r\n                }\r\n            } else {\r\n                return e;\r\n            }\r\n        });\r\n        setItemsCarrito(listaModCantidadItem);\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ itemsCarrito, setItemsCarrito, addItem, removeItem, addCountItem, removeCountItem, totalItems, totalPrecio }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\nexport default ProviderCart;\r\nexport const CartContext = createContext();\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  query,\r\n  doc,\r\n  addDoc,\r\n  deleteDoc,\r\n  updateDoc,\r\n  where,\r\n  Timestamp,\r\n  orderBy,\r\n  limit\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\nconst database = getFirestore();\r\n\r\n// Guardar\r\nexport const guardarDatabase = async (nombreColeccion, data) => {\r\n  try {\r\n    const response = await addDoc(collection(database, nombreColeccion), data);\r\n    return response;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Consultar todos los documentos (Coleccion)\r\nexport const consultarDatabase = async (nombreColeccion) => {\r\n  try {\r\n    const response = await getDocs(query(collection(database, nombreColeccion)));\r\n    const elementos = response.docs.map((doc) => {\r\n      const document = {\r\n        id: doc.id, //doc.id: es el id que genera firebase (externo)\r\n        ...doc.data(), // Si ya existe un atributo \"id\" lo reescribe del id que genera firebase\r\n      };\r\n      return document;\r\n    });\r\n    return elementos;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Consultar un documento por ID (externo generado por Firebase)\r\nexport const consultarDocumentoDatabase = async (nombreColeccion, id) => {\r\n  try {\r\n    const response = await getDoc(doc(database, nombreColeccion, id));\r\n    // Si no encuentra el documento response._document = null\r\n    if (response._document !== null) {\r\n      const document = {\r\n        id: response.id,\r\n        ...response.data(),\r\n      };\r\n      return document;\r\n    } else {\r\n      //No encontró el documento\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n//Consultar un documento filtrado por: categoría\r\nexport const buscarDocumentoFiltradoCategoria = async (nombreColeccion, idCategory) => {\r\n  try {\r\n    let elementos = '';\r\n    const response = await getDocs(\r\n      query(\r\n        collection(database, nombreColeccion), where(\"IdCategory\", \"==\", Number(idCategory))\r\n      )\r\n    );\r\n    elementos = response.docs.map((doc) => {\r\n      const document = {\r\n        id: doc.id, \r\n        ...doc.data(), \r\n      };\r\n      return document;\r\n    });\r\n    return elementos;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n\r\n//Consultar un documento filtrado por: id\r\nexport const buscarDocumentoFiltrado = async (nombreColeccion, id) => {\r\n  try {\r\n    let document = '';\r\n    const response = await getDocs(\r\n      query(\r\n        collection(database, nombreColeccion), where(\"id\", \"==\", id)\r\n      )\r\n    );\r\n    response.docs.map((doc) => {\r\n      document = {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      };\r\n    });\r\n    return document;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Actualizar un documento\r\nexport const actualizarDocumentoDatabase = async (nombreColeccion, id, data) => {\r\n  try {\r\n    const response = await updateDoc(doc(database, nombreColeccion, id), data);\r\n    console.log(response);\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Actualizar un documento Filtrado Id\r\nexport const actualizarDocumentoFiltrado = async (nombreColeccion, id, data) => {\r\n  try {\r\n    const q = query(collection(database, nombreColeccion), where(\"id\", \"==\", id));\r\n    const response = await getDocs(q);\r\n    response.forEach(async (element) => {\r\n      await updateDoc(doc(database, nombreColeccion, element.id), data);\r\n    });\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n\r\n// Eliminar un documento\r\nexport const eliminarDocumentoDatabase = async (nombreColeccion, id) => {\r\n  try {\r\n    const response = await deleteDoc(doc(database, nombreColeccion, id));\r\n    console.log(response);\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n//Obtener Fecha TimeStamp\r\nexport const fechaFirebase = () => {\r\n  return Timestamp.fromDate(new Date());\r\n};\r\n\r\n\r\n//======================CONSULTA PARA ORDENAR===============================//\r\nexport const getFilterCollection = async (nombreColeccion, keyDocumento, condicion, value, limite, orden = \"asc\") => {\r\n\r\n  //orden: 'asc', 'desc\"\r\n\r\n  // Filtros\r\n  // < menor que\r\n  // <= menor o igual que\r\n  // === igual que\r\n  // > mayor que\r\n  // >= mayor que o igual que\r\n  // !== no igual a\r\n  // array - contains\r\n  // array - contains - any\r\n  // in\r\n  // not -in\r\n\r\n  try {\r\n    const response = await getDocs(\r\n      query(\r\n        collection(database, nombreColeccion),\r\n        where(keyDocumento, condicion, value), // filtros\r\n        // where(\"edad\", \">\", 12), // Ejemplo\r\n        orderBy(keyDocumento, orden), // orden: por defecto es ascendente y se puedde pasar: ,\"desc\"\r\n        limit(limite) // Limitar la cantidad de registros\r\n      )\r\n    );\r\n    //console.log(response);\r\n    const elementos = response.docs.map((doc) => {\r\n      const document = {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      };\r\n      return document;\r\n    });\r\n\r\n    return elementos;\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n};","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Item = ({ id, id_interno, title, pictureUrl, stock }) => {\r\n    return (\r\n        //Renderizo una Card de Bootstrap        \r\n        <Card style={{ width: '10rem' }}>\r\n            <Card.Img variant=\"top\" src={pictureUrl} width=\"10px\" />\r\n            <Card.Body>\r\n                <Card.Title className=\"text-capitalize\">{title}</Card.Title>\r\n                <Card.Text>\r\n                    Ref: {id_interno}\r\n                    <br />\r\n                    Stock del producto: {stock}\r\n                </Card.Text>\r\n                {/* Llamando al componente encargado de cargar los detalles del Item */}\r\n                <Link to={`/item/${id}`} className=\"btn btn-success\">\r\n                    detalle\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useState } from 'react';\r\nimport Item from './Item';\r\nimport './../../assets/css/ItemList.css';\r\n\r\nconst ItemList = ({ itemsArray }) => {\r\n    const [items, setItems] = useState(itemsArray);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"listaItems\">\r\n                {items.map((e, idx) => {\r\n                    return <Item id={e.id} id_interno={e.id_interno} title={e.title} stock={e.stock} pictureUrl={e.pictureUrl} key={idx} />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { consultarDatabase, buscarDocumentoFiltradoCategoria } from './../../config/firebaseConfig';\r\nimport './../../assets/css/ItemListContainer.css';\r\nimport ItemList from './ItemList';\r\nimport { useParams } from 'react-router';\r\n\r\nconst ItemListContainer = () => {\r\n\r\n    const [items, setItems] = useState(null);\r\n\r\n    //Obteniendo parámetros por URL\r\n    const { id: idCategory } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const categorias = ['Accesorios', 'Calzado', 'Vestir'];\r\n\r\n    // Carga productos desde la DB\r\n    const llamadaServidor = async () => {\r\n        setLoading(true);\r\n        const listaTemporal = await consultarDatabase('items');\r\n        setLoading(false);\r\n\r\n        if (!loading) {\r\n            if (idCategory) {\r\n                setLoading(true);\r\n                setItems(null);\r\n                //Implementando la búsqueda por Categoría con Query (where) de firestore\r\n                const categoryFilter = await buscarDocumentoFiltradoCategoria('items', idCategory);\r\n                setItems(categoryFilter);\r\n                setLoading(false);\r\n            } else {\r\n                setItems(null);\r\n                setItems(listaTemporal);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setItems(null);\r\n        /* Llamando al servidor  */\r\n        llamadaServidor(idCategory);\r\n    }, [idCategory]);\r\n\r\n    return (\r\n        <div className=\"itemList mt-5 pt-5\">\r\n            <h4>Conoce nuestros productos: </h4>\r\n            {idCategory ?\r\n                <h5> Categoría: <span className=\"text-danger\">{categorias[idCategory - 1]}</span></h5>\r\n                :\r\n                <h5 className=\"text-danger\">(Todos)</h5>\r\n            }\r\n            {\r\n                items ?\r\n                    <div className=\"showCards container mx-5 px-5\">\r\n                        <ItemList itemsArray={items} />\r\n                    </div>\r\n                    :\r\n                    <div className=\"showCards container mx-5 px-5\">\r\n                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ItemListContainer;\r\n","import React, { useState, useContext } from 'react';\r\nimport \"./../../assets/css/ItemCount.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from 'context/CartContext';\r\n\r\nconst ItemCount = ({ productosAgregadosCarrito, stock, initial, idProducto, precio }) => {\r\n    //Paso a Number los props\r\n    stock = Number(stock);\r\n    initial = Number(initial);\r\n    //Estado:\r\n    const [count, setCount] = useState(initial);\r\n    const [agregadoCarrito, setAgregadoCarrito] = useState(false);\r\n    //Context:\r\n    const { addItem } = useContext(CartContext);\r\n    //Lógica de botones\r\n    let onAdd = () => { count < stock ? setCount(count + 1) : alert(`No puedes agregar más de ${stock} productos porque no hay más stock`); };\r\n    let onMinus = () => { count > initial ? setCount(count - 1) : alert(`El valor mínimo es: ${initial}`); };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {!agregadoCarrito ?\r\n                    <>\r\n                        <div className=\"counter\">\r\n                            <button className=\"buttonItem minus btn\" onClick={() => onMinus()}>-</button>\r\n                            <div className=\"showCount\">{count}</div>\r\n                            <button className=\"buttonItem add btn\" onClick={() => onAdd()}>+</button>\r\n                        </div>\r\n                        <div className=\"botonAgregar\">\r\n                            <button type=\"\" className=\"btn btn-dark\" onClick={() => { productosAgregadosCarrito(count); setAgregadoCarrito(true); addItem({ idProducto, 'cantidad': count, precio }); }}>Agregar al carrito</button>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div className=\"botonTerminarCompra\">\r\n                        <br />\r\n                        <Link type=\"\" className=\"btn btn-primary my-2\" to=\"/cart\">Terminar mi Compra</Link>\r\n                        <br />\r\n\r\n                    </div>\r\n                }\r\n                <Link type=\"\" className=\"btn btn-outline-success mt-5\" to=\"/\">Seguir Comprando</Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default ItemCount;\r\n","import ItemCount from \"./ItemCount\";\r\nimport { useState, useEffect } from 'react';\r\nimport './../../assets/css/ItemDetail.css'\r\n\r\nconst ItemDetail = ({ itemDetail }) => {\r\n    const [totalProductos, setTotalProductos] = useState(0);\r\n\r\n    const productosAgregadosCarrito = (quantityToAdd) => {\r\n        setTotalProductos(quantityToAdd);\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, [totalProductos]);\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center mt-5 pt-4\">\r\n            <div id=\"columnas\" className=\"row pt-5\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <img id=\"img_detail\" className =\"img-fluid\" src={itemDetail.pictureUrl}  alt=\"\" />\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pt-3\">\r\n                    <div className=\"h3 text-capitalize\">{itemDetail.title + \" \" + itemDetail.marca.toUpperCase()}</div>\r\n                    <div className=\"h6 text-black-50 \">{itemDetail.descripcion}\r\n                        \r\n                    </div>\r\n                    <div className=\"\">\r\n                        <div className=\"mt-4\">\r\n                            <button type=\"button\" className=\"btn btn-warning\" disabled data-bs-toggle=\"button\">\r\n                                Stock disponible: {itemDetail.stock}\r\n                            </button>\r\n                            <div className=\"h5 mt-4\">{\"Precio: \" + itemDetail.price + \"$\"}</div>\r\n                            {/* Agrego ItemCount con datos de Stock traídos por props */}\r\n                            {/* Le paso el evento para que desde ItemCount Me guarde la cantiidad de productos Agregados al Carrito */}\r\n                            <ItemCount productosAgregadosCarrito={productosAgregadosCarrito} idProducto={itemDetail.id} stock={itemDetail.stock} precio={itemDetail.price} initial={1} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ItemDetail;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n//Consulta a configuracion firebase\r\nimport { consultarDocumentoDatabase } from './../../config/firebaseConfig';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport ItemDetail from \"./ItemDetail\";\r\n\r\nconst ItemDetailContainer = () => {\r\n    const [itemDetail, setItemDetail] = useState(null);\r\n    const { id: productId } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [noEncontrado, setNoEncontrado] = useState(false);\r\n\r\n\r\n    // Carga producto desde la DB\r\n    const getItem = async () => {\r\n        setLoading(true);\r\n        const productoObtenido = await consultarDocumentoDatabase('items', productId);\r\n        setLoading(false);\r\n\r\n        if (!loading) {\r\n            setLoading(true);\r\n            setItemDetail(null);\r\n            if (productoObtenido !== null) {\r\n                setItemDetail(productoObtenido);\r\n            } else {\r\n                setNoEncontrado(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getItem();\r\n    }, [productId]);\r\n\r\n    return (\r\n        <div>\r\n            {/* Llamando al componeente que renderizará los detalles del Item */}\r\n            {\r\n                !noEncontrado ?\r\n                    !itemDetail ?\r\n                        <div className=\"container d-flex flex-column justify-content-center align-items-center my-5 py-5\">\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        </div>\r\n                        :\r\n                        <ItemDetail itemDetail={itemDetail} />\r\n                    :\r\n                    <div className=\"container d-flex align-items-center justify-content-center my-5 py-5\">\r\n                        <div className=\"h3\">Producto con id: <strong className=\"text-danger\">{productId}</strong> no encontrado en la base de datos</div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default ItemDetailContainer;\r\n\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { consultarDatabase } from './../../config/firebaseConfig';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from 'context/CartContext';\r\nimport { Spinner, Modal, Button } from 'react-bootstrap';\r\nimport './../../assets/css/Cart.css';\r\nimport { FaCheck } from 'react-icons/fa';\r\n\r\nconst Cart = () => {\r\n    const [infoCart, setInfoCart] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const [itemsInfoCompleta, setItemsInfoCompleta] = useState(null);\r\n    const [idItemEliminar, setIdItemEliminar] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [mounted, setMounted] = useState(true); \r\n\r\n    //Context Cart\r\n    const { itemsCarrito, setItemsCarrito, totalItems, removeItem, addCountItem, removeCountItem, totalPrecio } = useContext(CartContext);\r\n    //Estados del Modal\r\n    const [show, setShow] = useState(false);\r\n    const [showVaciar, setShowVaciar] = useState(false);\r\n\r\n    //Funciones del Modal\r\n    const handleClose = () => { setShow(false); setShowVaciar(false); };\r\n    const handleShow = () => setShow(true);\r\n    const handleShowVaciar = () => setShowVaciar(true);\r\n\r\n    //Efecto que está pendiente si se elimina un item del carrito\r\n    useEffect(() => {\r\n\r\n        setMounted(true); \r\n\r\n        setData(null);\r\n        setLoading(true);\r\n        if (itemsCarrito.length !== 0) {\r\n            getCart();\r\n        } else {\r\n            setInfoCart(true);\r\n        }\r\n        setLoading(false);\r\n\r\n        return () => setMounted(false);\r\n\r\n    }, [itemsCarrito, data]); \r\n\r\n    // Función Carga productos desde la DB\r\n    const getCart = async () => {\r\n        if (mounted) {  \r\n            setLoading(true);\r\n            setData(null);\r\n            const listaTemporal = await consultarDatabase('items');\r\n            setLoading(false);\r\n            setData(listaTemporal);\r\n            if (!loading && data) { \r\n                setLoading(true);\r\n\r\n                let itemsFiltrados = itemsCarrito.map(e => ({\r\n                    'idProducto': e.idProducto,\r\n                    'title': data.find(ef => e.idProducto === ef.id).title,\r\n                    'marca': data.find(ef => e.idProducto === ef.id).marca,\r\n                    'stock': data.find(ef => e.idProducto === ef.id).stock,\r\n                    'pictureUrl': data.find(ef => e.idProducto === ef.id).pictureUrl,\r\n                    'precio': data.find(ef => e.idProducto === ef.id).price,\r\n                    'id_interno': data.find(ef => e.idProducto === ef.id).id_interno,\r\n                    'cantidad': e.cantidad\r\n                }));\r\n                setItemsInfoCompleta(itemsFiltrados);\r\n                setLoading(false);\r\n                setInfoCart(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    //Función que confirma la Eliminación del Item de la lista\r\n    const confirmaEliminacionItem = () => {\r\n\r\n        removeItem(idItemEliminar);\r\n    };\r\n\r\n    //Función que confirma Vaciar Contenido del Carrito de Compras\r\n    const confirmaVaciarCarrito = () => {\r\n        setItemsCarrito([]);\r\n    };\r\n\r\n    //función Muestra Modal de Eliminación de un Item del Carrito de Compras\r\n    const modalEliminacionItem = () => {\r\n        handleShow();\r\n    };\r\n\r\n    //Función muestra Modal de Vaciar Carrito\r\n    const modalVaciarCarrito = () => {\r\n        handleShowVaciar();\r\n    };\r\n\r\n\r\n    //Función que muestra un  número en formato separado por comas en los miles (para facilidad de ver el número)\r\n    const muestraNumeroComas = (value) => {\r\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center mt-3 pt-5\">\r\n            {!infoCart ?\r\n                <div className=\"container d-flex flex-column justify-content-center align-items-center my-5 py-5\">\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                </div>\r\n                :\r\n                itemsCarrito.length !== 0\r\n                    ?\r\n                    <>\r\n                        <h5 className=\"mt-5\">\r\n                            Tienes los siguientes productos en tu carrito:\r\n                        </h5>\r\n                        <table id=\"tablaCart\" className='table table-bordered align-middle'>\r\n                            <thead  >\r\n                                <tr>\r\n                                    <th className=\"text-center\">Producto</th>\r\n                                    <th className=\"text-center\">Editar cantidad</th>\r\n                                    <th className=\"text-center\">Cantidad</th>\r\n                                    <th className=\"text-center\">Precio unitario</th>\r\n                                    <th className=\"text-center\">Precio*cantidad</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {itemsInfoCompleta.map(e => (\r\n                                    <tr key={e.idProducto} className=\"\">\r\n                                        <td className=\"text-capitalize d-flex justify-content-between\">\r\n                                            <div>\r\n                                                <div>{e.title}</div>\r\n                                                <div className=\"fw-bold text-black-50\">\r\n                                                    {e.marca}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {'(Ref: ' + e.id_interno + ')'}\r\n                                                </div>\r\n                                            </div>\r\n                                            <img className=\"ms-3\" src={e.pictureUrl} alt=\"\" width=\"50px\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"btn btn-primary rounded-pill\" onClick={() => { removeCountItem(e.idProducto, 1); }}  >-</div>\r\n                                            <div className=\"btn btn-primary rounded-pill\" onClick={() => { addCountItem(e.idProducto, 1, e.stock); }}>+</div>\r\n                                            <div className=\"btn btn-danger rounded-pill\" onClick={() => { modalEliminacionItem(); setIdItemEliminar(e.idProducto); }}>x</div>\r\n\r\n                                        </td>\r\n                                        <td className=\"py-auto text-center\" >{e.cantidad} </td>\r\n                                        <td className=\"py-auto text-center\" >${muestraNumeroComas(e.precio)} </td>\r\n                                        <td className=\"py-auto text-center\" >${muestraNumeroComas(e.precio * e.cantidad)} </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot >\r\n                                <tr>\r\n                                    <th className=\"text-end\" colSpan=\"2\">Total cantidad</th>\r\n                                    <th className=\"text-center\">{totalItems}</th>\r\n                                    <th className=\"text-end\" colSpan=\"1\">Total precio</th>\r\n                                    <th className=\"text-center\">${muestraNumeroComas(totalPrecio)}</th>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        <div className=\"d-flex mb-3\">\r\n                            <Link className=\"btn btn-primary mx-1\" to={{ pathname: \"/form\", itemsInfoCompleta }} >\r\n                                <FaCheck className=\"me-2\" />\r\n                                Finalizar compra\r\n                            </Link>\r\n                            <Link type=\"\" className=\"btn btn-success mx-1\" to=\"/\">Seguir Comprando</Link>\r\n\r\n                        </div>\r\n                        <div className=\"btn btn-outline-danger\" onClick={() => { modalVaciarCarrito(); }}>\r\n                            Vaciar carrito de compras\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className=\"h4 pt-4\">Tu carrito de compras está vacío</div>\r\n                        <h5 className=\"mt-5 mb-5\">Da click en el siguiente botón para que puedas comprar </h5>\r\n                        <Link className=\"btn btn-warning\" to=\"/\">Volver a Productos</Link>\r\n                    </>\r\n            }\r\n            {/* Modal Confirma Eliminar Item */}\r\n            < Modal show={show} onHide={handleClose} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡Confirmación Eliminación!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>¿Realmente deseas eliminar el producto del carrito de compras?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => { handleClose(); confirmaEliminacionItem(); }}>\r\n                        Aceptar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Modal Copnfirma Vaciar Carrito */}\r\n            < Modal show={showVaciar} onHide={handleClose} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡Confirma Vaciar Carrito!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>¿Realmente deseas Vaciar todo el contenido del carrito de compras?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => { handleClose(); confirmaVaciarCarrito(); }}>\r\n                        Aceptar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { consultarDocumentoDatabase, guardarDatabase, fechaFirebase, consultarDatabase, getFilterCollection } from './../../config/firebaseConfig';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { CartContext } from 'context/CartContext';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './../../assets/css/Form.css';\r\n\r\n\r\nexport const Form = () => {\r\n    const [ordenCompra, setOrdenCompra] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [nombre, setNombre] = useState('');\r\n    const [apellido, setApellido] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [emailVerification, setEmailVerification] = useState('');\r\n    const [emailErr, setEmailErr] = useState(false);\r\n    const [emailVerificationErr, setEmailVerificationErr] = useState(false);\r\n    const [telefono, setTelefono] = useState('');\r\n\r\n    //Context de Cart\r\n    const { totalItems, totalPrecio, setItemsCarrito } = useContext(CartContext);\r\n\r\n    //Props del LINK\r\n    const location = useLocation();\r\n    const itemsInfoCompleta = location.itemsInfoCompleta;\r\n\r\n    // Effect que está pendiente si se genera orden compra para poner loading en false (puesto que ordenCmpra se toma su tiempo)\r\n    useEffect(() => {\r\n        if (ordenCompra) {\r\n            setLoading(false);\r\n        }\r\n    }, [ordenCompra]);\r\n\r\n\r\n    //--Función Submit que envía la información de Orden de Compra a la DB\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (email === emailVerification && !emailErr && !emailVerificationErr) {\r\n            setLoading(true);\r\n            let nro_orden = await generaNumeroOrden();\r\n            const nueva_orden = {\r\n                buyer: {\r\n                    nombre,\r\n                    apellido,\r\n                    email,\r\n                    telefono\r\n                },\r\n                items: [...itemsInfoCompleta],\r\n                date: fechaFirebase(),\r\n                totalItems,\r\n                totalPrecio,\r\n                nro_orden\r\n            };\r\n            let ordenGuardada = await guardarDatabase('orders', nueva_orden);\r\n            //Setea a 0 el contenido del carrito de compras\r\n            setItemsCarrito([]);\r\n            //Obtiene toda la orden desde la DB\r\n            getOrder(ordenGuardada.id);\r\n        } else {\r\n            alert(\"Los e-mail deben coincidir para realizar la la orden de compra\");\r\n        }\r\n    };\r\n\r\n    //---Funciones Validación Doble Email--------------------------\r\n    const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n\r\n    const handleEmail = (e) => {\r\n        const emailInput = e.target.value;\r\n        setEmail(emailInput);\r\n        if (emailRegex.test(emailInput)) {\r\n            setEmailErr(false);\r\n        } else {\r\n            setEmailErr(true);\r\n        }\r\n    };\r\n\r\n    const handleEmailVerification = (e) => {\r\n        const emailInput = e.target.value;\r\n        setEmailVerification(emailInput);\r\n        if (emailRegex.test(emailInput)) {\r\n            setEmailVerificationErr(false);\r\n        } else {\r\n            setEmailVerificationErr(true);\r\n        }\r\n    };\r\n\r\n    //---Funcion Carga la Orden generada desde la DB--------------------\r\n    const getOrder = async (idOrder) => {\r\n        setOrdenCompra(null);\r\n        const ordenObtenida = await consultarDocumentoDatabase('orders', idOrder);\r\n        setOrdenCompra(ordenObtenida);\r\n    };\r\n\r\n    //----Función para convertir Timestamp a formato legible por el usuario\r\n    const convierteFechaHora = (timeStamp) => {\r\n        let fecha = new Date(timeStamp.toMillis()); //Fecha-hora con el timeStamp de Firebase\r\n        let mes = fecha.getMonth() + 1; //obteniendo mes\r\n        let dia = fecha.getDate(); //obteniendo dia\r\n        let ano = fecha.getFullYear(); //obteniendo año\r\n        let hora2 = fecha.toLocaleString('en-US', {\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n            hour12: true,\r\n        });\r\n        return `${dia}/${mes}/${ano} -  ${hora2}`;\r\n    };\r\n\r\n    //---Función que muestra un  número en formato separado por comas en los miles (para facilidad de ver el número)\r\n    const muestraNumeroComas = (value) => {\r\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    };\r\n\r\n    //--Función Generadora de Número de Orden (verifica si existe, lo incrementa)\r\n    let generaNumeroOrden = async () => {\r\n        let dbConsultada = await consultarDatabase(\"orders\");\r\n        if (dbConsultada.length === 0) {\r\n            return 1;\r\n        } else {\r\n            //--Obtiene una lista ordenada descendentemente por \"nro_orden\" (>0)\r\n            let datosOrdenados = await getFilterCollection(\"orders\", \"nro_orden\", \">\", 0, 1, \"desc\");\r\n\r\n            //--extrae el primer elemento de la lista ordenada\r\n            let primerElementoLista = datosOrdenados[0];\r\n\r\n            //--Obtiene el nro_orden del primer elemento:\r\n            let nro_orden_maximo = primerElementoLista.nro_orden;\r\n\r\n            //Retorna el numero de orden para ser usado\r\n            return nro_orden_maximo + 1;\r\n        }\r\n    };\r\n\r\n    //============================= RENDER =========================================================================================\r\n    //--Render Condicional (Renderiza solo si vienen elementos en el carrito de compras)\r\n    if (itemsInfoCompleta !== undefined) {\r\n        return (\r\n            !ordenCompra && !loading ?\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"headerForm container mt-5 d-flex flex-column justify-content-center align-items-center\">\r\n                                <div className=\"h4\">¡Ya casi lo tienes!</div>\r\n                                <div className=\"h6\">Para finalizar la compra por favor diligencia el siguiente formulario</div>\r\n                            </div>\r\n                            <form className=\"container  pt-4 maxAncho\" onSubmit={handleSubmit}>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"inputNombre\" className=\"form-label\">Nombre</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputNombre\" aria-describedby=\"name\" placeholder=\"Ingresa tu nombre\" value={nombre} onChange={(e) => setNombre(e.target.value)} required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"inputApellido\" className=\"form-label\">Apellido</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputApellido\" aria-describedby=\"last_name\" placeholder=\"Ingresa tu apellido\" value={apellido} onChange={(e) => setApellido(e.target.value)} required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"inputEmail\" className=\"form-label\">Email</label>\r\n                                    <input type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputEmail\"\r\n                                        aria-describedby=\"emailHelp\"\r\n                                        placeholder=\"e-mail\"\r\n                                        value={email}\r\n                                        onChange={handleEmail}\r\n                                        required\r\n                                    />\r\n                                    {\r\n                                        emailErr ?\r\n                                            <div id=\"emailHelp\" className=\"form-text text-danger\">Ingresa un email válido: nombre@dominio.net</div>\r\n                                            :\r\n                                            email !== emailVerification ?\r\n                                                <div id=\"emailHelp\" className=\"form-text text-danger\">Los email no coinciden</div>\r\n                                                :\r\n                                                null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"inputEmailVerification\" className=\"form-label\">*Repite tu Email</label>\r\n                                    <input type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputEmailVerification\"\r\n                                        aria-describedby=\"emailHelp\"\r\n                                        placeholder=\"Repite tu e-mail\"\r\n                                        value={emailVerification}\r\n                                        onChange={handleEmailVerification}\r\n                                        required />\r\n                                    {\r\n                                        emailVerificationErr ?\r\n                                            <div id=\"emailHelp\" className=\"form-text text-danger\">Ingresa un email válido: nombre@dominio.net</div>\r\n                                            :\r\n                                            email !== emailVerification ?\r\n                                                <div id=\"emailHelp\" className=\"form-text text-danger\">Los email no coinciden</div>\r\n                                                :\r\n                                                null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"inputTelefono\" className=\"form-label\">Telefono</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputTelefono\" aria-describedby=\"phone\" placeholder=\"Telefono\" value={telefono} onChange={(e) => setTelefono(e.target.value)} required />\r\n                                </div>\r\n                                {email !== emailVerification && (emailErr && emailVerificationErr && !email && !emailVerification) ?\r\n                                    <>\r\n                                        <div className=\"text-danger form-text\">\r\n                                            *Los e-mail deben coincidir para que se habilite el botón \"Realizar Compra\"\r\n                                        </div>\r\n                                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Realizar Compra\" disabled />\r\n                                    </>\r\n                                    :\r\n                                    (email === emailVerification && email && emailVerification && !emailErr && !emailVerificationErr && nombre && apellido && telefono) ?\r\n                                        <>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Realizar Compra\" />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <div className=\"text-muted form-text\">\r\n                                                *Debes ingresar todos los datos para que se habilite el botón \"Realizar Compra\"\r\n                                            </div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Realizar Compra\" disabled />\r\n                                        </>\r\n\r\n                                }\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-6 mt-5 justify-content-end\">\r\n                            <div className=\"h5\">\r\n                                Resumen de tu carrito de compras:\r\n                            </div>\r\n                            {itemsInfoCompleta.map(e => (\r\n\r\n                                <ul key={e.idProducto} className=\"listaResumen \" >\r\n                                    <li className=\"itemListaResumen border border-2 p-2\">\r\n                                        <div className=\" d-flex justify-content-start align-items-center\">\r\n                                            <img className=\"mx-1\" src={e.pictureUrl} alt=\"\" width=\"50px\" />\r\n                                            <div>\r\n                                                <div className=\"h6 text-capitalize\">\r\n                                                    {e.title + ' ' + e.marca}\r\n                                                </div>\r\n                                                <div>\r\n                                                    Unidades: {e.cantidad} - Valor unidad: ${muestraNumeroComas(e.precio)}\r\n                                                </div>\r\n                                                <div >\r\n                                                    Valor por cantidad:  ${muestraNumeroComas(e.precio * e.cantidad)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            ))}\r\n                            <div className=\"fw-bold\">\r\n                                Total cantidades: {totalItems} - Precio Total: ${muestraNumeroComas(totalPrecio)}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                : loading ?\r\n                    <div className=\"container d-flex flex-column justify-content-center align-items-center my-5 py-5\">\r\n                        <div className=\"my-3\">\r\n                            Procesando tu compra, aguarda unos segundos...\r\n                        </div>\r\n                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <div className=\"container d-flex flex-column justify-content-center align-items-center pt-4 mt-5\">\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                            <div className=\"h2 text-success\">¡Felicidades! </div>\r\n                            <div className=\"h5 text-primary\">El resumen de tu compra es: </div>\r\n                        </div>\r\n                        <table className='table table-bordered align-middle mt-4 mb-3 maxAncho'>\r\n                            <tr>\r\n                                <th>Id de orden</th>\r\n                                <td className=\"text-muted fw-bold\">{ordenCompra.id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>N° de orden</th>\r\n                                <td className=\"text-muted fw-bold\">{ordenCompra.nro_orden}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Fecha/Hora de compra</th>\r\n                                <td>{convierteFechaHora(ordenCompra.date)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Nombre</th>\r\n                                <td>{ordenCompra.buyer.nombre}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Apellido</th>\r\n                                <td>{ordenCompra.buyer.apellido}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Teléfono</th>\r\n                                <td>{ordenCompra.buyer.telefono}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>e-mail</th>\r\n                                <td>{ordenCompra.buyer.email}</td>\r\n                            </tr>\r\n                        </table>\r\n                        <div className=\"text-primary h4 pt-4\">\r\n                            Items de tu compra:\r\n                        </div>\r\n                        <table id=\"tablaOrden\" className='table table-bordered align-middle maxAncho'>\r\n                            <thead  >\r\n                                <tr>\r\n                                    <th className=\"text-center\">Producto</th>\r\n                                    <th className=\"text-center\">Ref</th>\r\n                                    <th className=\"text-center\">Cantidad</th>\r\n                                    <th className=\"text-center\">Precio unitario</th>\r\n                                    <th className=\"text-center\">Precio * cantidad</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {ordenCompra.items.map(e => (\r\n                                    <tr key={e.idProducto} className=\"\">\r\n                                        <td className=\"text-capitalize d-flex justify-content-between\">\r\n                                            <div>\r\n                                                <div className=\"h5\">  {e.title} </div>\r\n                                                <div>  {e.marca} </div>\r\n                                            </div>\r\n                                            <img className=\"ms-3\" src={e.pictureUrl} alt=\"\" width=\"50px\" />\r\n                                        </td>\r\n                                        <td>{e.id_interno}</td>\r\n                                        <td className=\"py-auto text-center\" >{e.cantidad} </td>\r\n                                        <td className=\"py-auto text-center\" >${muestraNumeroComas(e.precio)} </td>\r\n                                        <td className=\"py-auto text-center\" >${muestraNumeroComas(e.precio * e.cantidad)} </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot >\r\n                                <tr>\r\n                                    <th className=\"text-end\" colSpan=\"2\">Total cantidad</th>\r\n                                    <th className=\"text-center\">{ordenCompra.totalItems}</th>\r\n                                    <th className=\"text-end\" colSpan=\"1\">Total precio</th>\r\n                                    <th className=\"text-center\">${muestraNumeroComas(ordenCompra.totalPrecio)}</th>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        <Link className=\"btn btn-primary\" to=\"/\">Volver a Productos</Link>\r\n                    </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center mt-4 pt-4\">\r\n                <h5 className=\"pt-5\">Para generar una órden de compra debes tener productos en tu carrito 🛒</h5>\r\n                <h6 className=\"mt-4 mb-5\">Da click en el siguiente botón para que puedas comprar </h6>\r\n                <Link className=\"btn btn-primary\" to=\"/\">Volver a Productos</Link>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { CartContext } from 'context/CartContext';\r\nimport \"./../../assets/css/ContadorCarrito.css\";\r\n\r\n//Muestra en el badge del carrito la cantidad total en color rojo solo cuando hay producto (render condicional)\r\nconst ContadorCarrito = () => {\r\n    //Contexto de Cart\r\n    const { totalItems } = useContext(CartContext);\r\n    return (\r\n        <span className=\"ContadorCarrito position-absolute badge rounded-pill bg-danger\">\r\n            {totalItems !== 0 ? totalItems : ''}\r\n        </span>\r\n\r\n    );\r\n};\r\n\r\nexport default ContadorCarrito;\r\n","import React from 'react';\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport ContadorCarrito from './ContadorCarrito'\r\n\r\nimport \"./../../assets/css/CartWidget.css\";\r\n\r\n\r\nconst CartWidget = ({cantidad}) => {\r\n    return (\r\n        <div className=\"cartWidget position-relative\">\r\n            <FaShoppingCart/>\r\n            <ContadorCarrito />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartWidget;\r\n","export default __webpack_public_path__ + \"static/media/shoppingLogo.d351765f.svg\";","import React from 'react';\r\nimport { Navbar, NavDropdown, Nav, Container } from 'react-bootstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CartWidget from \"./../Cart/CartWidget\";\r\nimport shoppingLogo from './../../img/shoppingLogo.svg';\r\n\r\nimport './../../assets/css/NavBar.css';\r\n\r\nconst NavBootStrap = () => {\r\n    return (\r\n        <div>\r\n            <Navbar className=\"fixed-top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <NavLink className=\"brand \" to=\"/\">\r\n                            <input type=\"image\" alt=\"logo\" src={shoppingLogo} height=\"25px\" />\r\n                            <span>Mi TiendAPP</span>\r\n                        </NavLink>\r\n                    </Navbar.Brand>\r\n                    <NavDropdown title=\"Categorías\" className=\"me-auto\">\r\n                        <div className=\"d-flex flex-column px-1\">\r\n                            <NavLink className=\"nav_link\" to=\"/category/1\">Accesorios</NavLink>\r\n                            <NavLink className=\"nav_link\" to=\"/category/2\">Calzado</NavLink>\r\n                            <NavLink className=\"nav_link\" to=\"/category/3\">Vestir</NavLink>\r\n                        </div>\r\n                    </NavDropdown>\r\n\r\n                    <NavLink className=\"nav_link\" to=\"/cart/\"><CartWidget /></NavLink>\r\n\r\n                </Container >\r\n            </Navbar >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default NavBootStrap;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport ProviderCart from './context/CartContext';\r\nimport ItemListContainer from './components/Item/ItemListContainerFirebase';\r\nimport ItemDetailContainer from './components/Item/ItemDetailContainerFirebase';\r\nimport Cart from \"./components/Cart/CartFirebase\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/css/App.css';\r\nimport { Form } from './components/Form/Form';\r\nimport NavBootStrap from 'components/NavBar/NavBootStrap';\r\n\r\nfunction App() {\r\n  return (\r\n    <ProviderCart>\r\n      <Router>\r\n        <NavBootStrap/>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <ItemListContainer />\r\n          </Route>\r\n          <Route exact path=\"/category/:id\">\r\n            <ItemListContainer />\r\n          </Route>\r\n          <Route exact path=\"/category/\">\r\n            <ItemListContainer />\r\n          </Route>\r\n          <Route exact path=\"/item/:id\">\r\n            <ItemDetailContainer />\r\n          </Route>\r\n          <Route exact path=\"/cart\">\r\n            <Cart />\r\n          </Route>\r\n          <Route exact path=\"/form\">\r\n            <Form />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ProviderCart>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/css/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}